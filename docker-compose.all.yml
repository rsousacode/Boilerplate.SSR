services:
  postgres:
    build:
      context: ./Docker/Postgres
      dockerfile: Postgres.Dockerfile
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=Boilerplate
      - POSTGRES_PASSWORD=postgres
    #volumes:
    #  - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
  apache:
    build:
      context: ./Docker/Apache
      dockerfile: Apache.Dockerfile
    ports:
      - 80:80
      - 443:443
    environment:
      - API_URL=http://ssr:5000/api
      - SERVER_NAME=www.boilerplate.com
      - SERVER_ALIAS=*.boilerplate.com
      - FRONTEND_URL=http://frontend:3000/
    depends_on:
      ssr:
        condition: service_healthy
  ssr:
    image: boilerplate-ssr
    environment:
      - ConnectionStrings__DefaultConnection=Server=postgres;Port=5432;Database=Boilerplate;User Id=postgres;Password=postgres;
      - ASPNETCORE_URLS=http://0.0.0.0:5000
      - Logging__LogLevel__Default=Warning
    build:
      context: .
      dockerfile: ./Docker/Dotnet/Dockerfile
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/users"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - postgres
  frontend:
    image: boilerplate-ssr-frontend
    build:
      context: .
      dockerfile: ./Docker/Frontend/Dockerfile

#volumes:
#  pgdata: